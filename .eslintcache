[{"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\reportWebVitals.js":"1","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\App.js":"2","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\pages\\NoA11y.js":"3","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\pages\\WithA11y.js":"4","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\index.js":"5","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\NavigationWithA11y.js":"6","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\ContactWithA11y.js":"7","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\AboutWithA11y.js":"8","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\NavigationNoA11y.js":"9","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\AboutNoA11y.js":"10","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\pages\\Start.js":"11","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\ContactNoA11y.js":"12","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\HeaderWithA11y.js":"13","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\HeaderNoA11y.js":"14","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\ModalWithA11y.js":"15","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\action\\validate.js":"16","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\Card.js":"17","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\assets\\UtilsCard.js":"18","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\Rapport\\DubbelForm.js":"19"},{"size":362,"mtime":1607101434674,"results":"20","hashOfConfig":"21"},{"size":1235,"mtime":1612789654614,"results":"22","hashOfConfig":"21"},{"size":3166,"mtime":1612532345474,"results":"23","hashOfConfig":"21"},{"size":1687,"mtime":1614112006181,"results":"24","hashOfConfig":"21"},{"size":500,"mtime":1607101434674,"results":"25","hashOfConfig":"21"},{"size":454,"mtime":1612538759354,"results":"26","hashOfConfig":"21"},{"size":7689,"mtime":1614112348533,"results":"27","hashOfConfig":"21"},{"size":3937,"mtime":1614090379396,"results":"28","hashOfConfig":"21"},{"size":316,"mtime":1612536234421,"results":"29","hashOfConfig":"21"},{"size":1284,"mtime":1612518146790,"results":"30","hashOfConfig":"21"},{"size":548,"mtime":1612860303704,"results":"31","hashOfConfig":"21"},{"size":4582,"mtime":1612529840821,"results":"32","hashOfConfig":"21"},{"size":1668,"mtime":1614167843068,"results":"33","hashOfConfig":"21"},{"size":576,"mtime":1612786557205,"results":"34","hashOfConfig":"21"},{"size":1292,"mtime":1612864205651,"results":"35","hashOfConfig":"21"},{"size":670,"mtime":1613134897762,"results":"36","hashOfConfig":"21"},{"size":628,"mtime":1614111962093,"results":"37","hashOfConfig":"21"},{"size":2690,"mtime":1614099481153,"results":"38","hashOfConfig":"21"},{"size":4236,"mtime":1614108911954,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vtt4ey",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"51"},"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\reportWebVitals.js",[],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\App.js",[],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\pages\\NoA11y.js",[],["84","85"],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\pages\\WithA11y.js",[],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\index.js",[],["86","87"],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\NavigationWithA11y.js",[],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\ContactWithA11y.js",["88"],"import HeaderWithA11y from \"./HeaderWithA11y\";\r\nimport ModalWithA11y from \"./ModalWithA11y\";\r\nimport { validateForm } from \"../action/validate\";\r\nimport { useState, useRef } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport DubbelForm from \"../Rapport/DubbelForm\";\r\n\r\nconst ContactWithA11y = () => {\r\n  const [formInput, setFormInput] = useState({\r\n    firstName: \"\",\r\n    surname: \"\",\r\n    microgreen: \"Pick\",\r\n    email: \"\",\r\n    information: \"\",\r\n    save: false,\r\n    phone: \"\",\r\n  });\r\n  const [errorForm, setErrorForm] = useState({});\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const firstNameRef = useRef();\r\n  const emailRef = useRef();\r\n  const saveRef = useRef();\r\n\r\n  const handleChange = (e) => {\r\n    const target = e.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    setFormInput({ ...formInput, [name]: value });\r\n  };\r\n  const deactivateModal = () => {\r\n    setShowModal(false);\r\n  };\r\n  const submitModal = () => {\r\n    setShowModal(false);\r\n    handleReset();\r\n    setSuccess(true);\r\n    setTimeout(() => {\r\n      setSuccess(false);\r\n    }, 5000);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setErrorForm({});\r\n    setFormInput({\r\n      firstName: \"\",\r\n      surname: \"\",\r\n      microgreen: \"Pick\",\r\n      email: \"\",\r\n      information: \"\",\r\n      save: false,\r\n      phone: \"\",\r\n    });\r\n  };\r\n  console.log(Object.keys(errorForm)[0]);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrorForm({});\r\n    let isValid = validateForm(formInput, setErrorForm);\r\n    console.log(isValid);\r\n    if (isValid === true) {\r\n      setShowModal(true);\r\n    } else {\r\n      handleFocus(Object.keys(isValid)[0]);\r\n    }\r\n  };\r\n\r\n  const handleFocus = (str) => {\r\n    console.log(str);\r\n    if (str === \"firstName\") {\r\n      console.log(\"1\");\r\n      return firstNameRef.current.focus();\r\n    } else if (str === \"email\") {\r\n      console.log(\"2\");\r\n      emailRef.current.focus();\r\n    } else if (str === \"save\") {\r\n      console.log(\"3\");\r\n      saveRef.current.focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Contact - The accessibility way</title>\r\n      </Helmet>\r\n      <a href=\"#maincontent\" id=\"skipLink\">\r\n        Skip to main content\r\n      </a>\r\n      <HeaderWithA11y headerText={\"Contact with A11Y\"} />\r\n      {showModal && (\r\n        <ModalWithA11y\r\n          deactivateModal={deactivateModal}\r\n          formInput={formInput}\r\n          submitModal={submitModal}\r\n        />\r\n      )}\r\n      <main className=\"centerColumn\" id=\"maincontent\">\r\n        {success && (\r\n          <div role=\"presentation\" id=\"success\">\r\n            <span className=\"material-icons\">done</span>\r\n          </div>\r\n        )}\r\n\r\n        {/* <DubbelForm /> */}\r\n\r\n        <h2>Sign up and become a member</h2>\r\n\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          onReset={handleReset}\r\n          className=\"centerColumn\"\r\n        >\r\n          <p>Required fields are marked width blue and a *</p>\r\n          <label htmlFor=\"firstName\">First name: *</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            id=\"firstName\"\r\n            value={formInput.firstName}\r\n            onChange={(e) => handleChange(e)}\r\n            aria-describedby=\"firstNameNote firstNameError\"\r\n            aria-invalid={!errorForm.firstName ? false : true}\r\n            ref={firstNameRef}\r\n          />\r\n\r\n          <span id=\"firstNameNote\">\r\n            Your first name must be at least 2 characters\r\n          </span>\r\n\r\n          <span\r\n            className=\"error\"\r\n            id=\"firstNameError\"\r\n            aria-atomic=\"true\"\r\n            aria-live=\"polite\"\r\n          >\r\n            {errorForm.firstName}\r\n          </span>\r\n\r\n          <label htmlFor=\"surname\">Surname: </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"surname\"\r\n            id=\"surname\"\r\n            value={formInput.surname}\r\n            onChange={(e) => handleChange(e)}\r\n            aria-describedby=\"surnameNote surnameError\"\r\n            // aria-invalid={!errorForm.surname ? false : true}\r\n          />\r\n\r\n          {/* <span id=\"surnameNote\">\r\n            Your surname must be at least 2 characters\r\n          </span>\r\n\r\n          <span className=\"error\" id=\"surnameError\">\r\n            {errorForm.surname}\r\n          </span> */}\r\n\r\n          <label htmlFor=\"email\">Email: *</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            value={formInput.email}\r\n            onChange={(e) => handleChange(e)}\r\n            aria-describedby=\"emailNote emailError\"\r\n            aria-invalid={!errorForm.email ? false : true}\r\n            ref={emailRef}\r\n          />\r\n\r\n          <span\r\n            className=\"error\"\r\n            id=\"emailError\"\r\n            aria-atomic=\"true\"\r\n            aria-live=\"polite\"\r\n          >\r\n            {errorForm.email}\r\n          </span>\r\n\r\n          {/* <label htmlFor=\"phone\">Phone: </label>\r\n          <input\r\n            type=\"phone\"\r\n            name=\"phone\"\r\n            id=\"phone\"\r\n            value={formInput.phone}\r\n            onChange={(e) => handleChange(e)}\r\n            aria-describedby=\"phoneNote phoneError\"\r\n          />\r\n          {errorForm.phone && (\r\n            <span className=\"error\" id=\"phoneError\">\r\n              {errorForm.phone}\r\n            </span>\r\n          )} */}\r\n\r\n          {/* <label htmlFor=\"microgreen\">Pick your favorite microgreen:</label>\r\n          <select\r\n            onChange={(e) => handleChange(e)}\r\n            name=\"microgreen\"\r\n            id=\"microgreen\"\r\n            value={formInput.microgreen}\r\n          >\r\n            <option value=\"Pick\" disabled>\r\n              Pick a microgreen\r\n            </option>\r\n            <option value=\"beetroot\">Beetroot</option>\r\n            <option value=\"garlic\">Garlic</option>\r\n            <option value=\"broccoli\">Broccoli</option>\r\n            <option value=\"alfalfa\">Alfalfa</option>\r\n          </select> */}\r\n\r\n          <fieldset>\r\n            <legend>\r\n              Do you want to receive information by Phone or email?\r\n            </legend>\r\n            <label htmlFor=\"emailInformation\">By email: </label>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"emailInformation\"\r\n              name=\"information\"\r\n              value=\"email\"\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            <label htmlFor=\"phoneInformation\">By phone: </label>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"phoneInformation\"\r\n              name=\"information\"\r\n              value=\"phone\"\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n          </fieldset>\r\n          <label htmlFor=\"save\">\r\n            Do you agree to let us save our information? *\r\n          </label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"save\"\r\n            id=\"save\"\r\n            checked={formInput.save}\r\n            value={formInput.save}\r\n            onChange={(e) => handleChange(e)}\r\n            aria-describedby=\"saveError\"\r\n            aria-invalid={!errorForm.save ? false : true}\r\n            ref={saveRef}\r\n          />\r\n\r\n          <span\r\n            className=\"error\"\r\n            id=\"saveError\"\r\n            aria-atomic=\"true\"\r\n            aria-live=\"polite\"\r\n          >\r\n            {errorForm.save}\r\n          </span>\r\n\r\n          <button type=\"reset\">Reset</button>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactWithA11y;\r\n","C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\AboutWithA11y.js",[],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\NavigationNoA11y.js",[],["89","90"],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\AboutNoA11y.js",[],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\pages\\Start.js",[],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\ContactNoA11y.js",["91"],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\HeaderWithA11y.js",[],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\HeaderNoA11y.js",[],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\ModalWithA11y.js",[],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\action\\validate.js",[],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\components\\Card.js",[],["92","93"],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\assets\\UtilsCard.js",[],"C:\\repos\\ec\\examensarbete\\the_accessibility_way\\src\\Rapport\\DubbelForm.js",["94","95","96","97"],"import { validateForm } from \"../action/validate\";\r\nimport { useState, useRef } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst DubbelForm = () => {\r\n  const [formInput, setFormInput] = useState({\r\n    firstName: \"\",\r\n    surname: \"\",\r\n    microgreen: \"Pick\",\r\n    email: \"\",\r\n    information: \"\",\r\n    save: false,\r\n    phone: \"\",\r\n  });\r\n  const [errorForm, setErrorForm] = useState({});\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const firstNameRef = useRef();\r\n  const emailRef = useRef();\r\n  const saveRef = useRef();\r\n\r\n  const handleChange = (e) => {\r\n    const target = e.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    setFormInput({ ...formInput, [name]: value });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setErrorForm({});\r\n    setFormInput({\r\n      firstName: \"\",\r\n      surname: \"\",\r\n      microgreen: \"Pick\",\r\n      email: \"\",\r\n      information: \"\",\r\n      save: false,\r\n      phone: \"\",\r\n    });\r\n  };\r\n  console.log(Object.keys(errorForm)[0]);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrorForm({});\r\n    let isValid = validateForm(formInput, setErrorForm);\r\n    console.log(isValid);\r\n    if (isValid === true) {\r\n      setShowModal(true);\r\n    } else {\r\n      handleFocus(Object.keys(isValid)[0]);\r\n    }\r\n  };\r\n\r\n  const handleFocus = (str) => {\r\n    console.log(str);\r\n    if (str === \"firstName\") {\r\n      console.log(\"1\");\r\n      return firstNameRef.current.focus();\r\n    } else if (str === \"email\") {\r\n      console.log(\"2\");\r\n      emailRef.current.focus();\r\n    } else if (str === \"save\") {\r\n      console.log(\"3\");\r\n      saveRef.current.focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main id=\"special\">\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          onReset={handleReset}\r\n          //   className=\"centerColumn\"\r\n        >\r\n          <label style={{ color: \"red\" }}>\r\n            Required fields{\" \"}\r\n            <span style={{ color: \"black\" }}>are marked width red </span>\r\n          </label>\r\n          <label htmlFor=\"firstName\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            id=\"firstName\"\r\n            value={formInput.firstName}\r\n            onChange={(e) => handleChange(e)}\r\n            aria-describedby=\"firstNameNote firstNameError\"\r\n            aria-invalid={!errorForm.firstName ? false : true}\r\n            ref={firstNameRef}\r\n          />\r\n\r\n          <label htmlFor=\"email\" style={{ color: \"red\" }}>\r\n            Email\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            value={formInput.email}\r\n            onChange={(e) => handleChange(e)}\r\n            aria-describedby=\"emailNote emailError\"\r\n            aria-invalid={!errorForm.email ? false : true}\r\n            ref={emailRef}\r\n          />\r\n        </form>\r\n\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          onReset={handleReset}\r\n          //   className=\"centerColumn\"\r\n        >\r\n          <label style={{ color: \"red\" }}>\r\n            Required fields{\" \"}\r\n            <span style={{ color: \"black\" }}>are marked width red and </span>*\r\n          </label>\r\n          <label htmlFor=\"firstName\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            id=\"firstName\"\r\n            value={formInput.firstName}\r\n            onChange={(e) => handleChange(e)}\r\n            aria-describedby=\"firstNameNote firstNameError\"\r\n            aria-invalid={!errorForm.firstName ? false : true}\r\n            ref={firstNameRef}\r\n          />\r\n\r\n          <label htmlFor=\"email\" style={{ color: \"red\" }}>\r\n            Email *\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            value={formInput.email}\r\n            onChange={(e) => handleChange(e)}\r\n            aria-describedby=\"emailNote emailError\"\r\n            aria-invalid={!errorForm.email ? false : true}\r\n            ref={emailRef}\r\n          />\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DubbelForm;\r\n",{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":18},{"ruleId":"98","replacedBy":"108"},{"ruleId":"100","replacedBy":"109"},{"ruleId":"104","severity":1,"message":"110","line":16,"column":9,"nodeType":"106","messageId":"107","endLine":16,"endColumn":21},{"ruleId":"98","replacedBy":"111"},{"ruleId":"100","replacedBy":"112"},{"ruleId":"104","severity":1,"message":"113","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":16},{"ruleId":"104","severity":1,"message":"114","line":16,"column":10,"nodeType":"106","messageId":"107","endLine":16,"endColumn":19},{"ruleId":"104","severity":1,"message":"115","line":17,"column":10,"nodeType":"106","messageId":"107","endLine":17,"endColumn":17},{"ruleId":"104","severity":1,"message":"116","line":17,"column":19,"nodeType":"106","messageId":"107","endLine":17,"endColumn":29},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],["117"],["118"],"no-unused-vars","'DubbelForm' is defined but never used.","Identifier","unusedVar",["117"],["118"],"'validateForm' is assigned a value but never used.",["117"],["118"],"'Helmet' is defined but never used.","'showModal' is assigned a value but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]